/*

  parsemidi - .mid file parsing library.

  Copyright 2023 - Michael Kohn (mike@mikekohn.net)
  https://www.mikekohn.net/

  This program falls under the BSD 3 license.

*/

#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

#include "file_io.h"
#include "Note.h"

Note::Note() :
  is_on    { false },
  channel  { 0 },
  tone     { 0 },
  velocity { 0 },
  length   { 0 }
{
}

Note::~Note()
{
}

int Note::set(uint8_t *data, int length)
{
  this->length = length;

  is_on = (data[0] & 0xf0) == 0x90;
  channel = data[0] & 0x0f;
  tone = data[1];
  velocity = data[2];

  return 2;
}

void Note::dump()
{
  int index = tone;
  if (index > 128) { index = 128; }

  printf("   note: { len=%-4d %s chan=%-2d velocity=%-3d tone=[ %d %s %.3f ] }\n",
    length,
    is_on ? "On " : "Off",
    channel,
    velocity,
    tone,
    note_table[index].name,
    note_table[index].frequency);
}

void Note::dump_as_json()
{
  printf("        { \"type\": \"note\", \"length\": %d, \"is_on\": %s, \"channel\": %d, \"tone\": %d, \"velocity\": %d }",
    length,
    is_on ? "true" : "false",
    channel,
    tone,
    velocity);
}

Note::NoteTable Note::note_table[] =
{
  { "",        8.18     }, // 0
  { "",        8.66     }, // 1
  { "",        9.18     }, // 2
  { "",        9.72     }, // 3
  { "",        10.30    }, // 4
  { "",        10.91    }, // 5
  { "",        11.56    }, // 6
  { "",        12.25    }, // 7
  { "",        12.98    }, // 8
  { "",        13.75    }, // 9
  { "",        14.57    }, // 10
  { "",        15.43    }, // 11
  { "",        16.35    }, // 12
  { "",        17.32    }, // 13
  { "",        18.35    }, // 14
  { "",        19.45    }, // 15
  { "",        20.60    }, // 16
  { "",        21.83    }, // 17
  { "",        23.12    }, // 18
  { "",        24.50    }, // 19
  { "",        25.96    }, // 20
  { "A0",      27.50    }, // 21
  { "A#0/Bb0", 29.14    }, // 22
  { "B0",      30.87    }, // 23
  { "C1",      32.70    }, // 24
  { "C#1/Db1", 34.65    }, // 25
  { "D1",      36.71    }, // 26
  { "D#1/Eb1", 38.89    }, // 27
  { "E1",      41.20    }, // 28
  { "F1",      43.65    }, // 29
  { "F#1/Gb1", 46.25    }, // 30
  { "G1",      49.00    }, // 31
  { "G#1/Ab1", 51.91    }, // 32
  { "A1",      55.00    }, // 33
  { "A#1/Bb1", 58.27    }, // 34
  { "B1",      61.74    }, // 35
  { "C2",      65.41    }, // 36
  { "C#2/Db2", 69.30    }, // 37
  { "D2",      73.42    }, // 38
  { "D#2/Eb2", 77.78    }, // 39
  { "E2",      82.41    }, // 40
  { "F2",      87.31    }, // 41
  { "F#2/Gb2", 92.50    }, // 42
  { "G2",      98.00    }, // 43
  { "G#2/Ab2", 103.83   }, // 44
  { "A2",      110.00   }, // 45
  { "A#2/Bb2", 116.54   }, // 46
  { "B2",      123.47   }, // 47
  { "C3",      130.81   }, // 48
  { "C#3/Db3", 138.59   }, // 49
  { "D3",      146.83   }, // 50
  { "D#3/Eb3", 155.56   }, // 51
  { "E3",      164.81   }, // 52
  { "F3",      174.61   }, // 53
  { "F#3/Gb3", 185.00   }, // 54
  { "G3",      196.00   }, // 55
  { "G#3/Ab3", 207.65   }, // 56
  { "A3",      220.00   }, // 57
  { "A#3/Bb3", 233.08   }, // 58
  { "B3",      246.94   }, // 59
  { "C4",      261.63   }, // 60
  { "C#4/Db4", 277.18   }, // 61
  { "D4",      293.66   }, // 62
  { "D#4/Eb4", 311.13   }, // 63
  { "E4",      329.63   }, // 64
  { "F4",      349.23   }, // 65
  { "F#4/Gb4", 369.99   }, // 66
  { "G4",      392.00   }, // 67
  { "G#4/Ab4", 415.30   }, // 68
  { "A4",      440.00   }, // 69
  { "A#4/Bb4", 466.16   }, // 70
  { "B4",      493.88   }, // 71
  { "C5",      523.25   }, // 72
  { "C#5/Db5", 554.37   }, // 73
  { "D5",      587.33   }, // 74
  { "D#5/Eb5", 622.25   }, // 75
  { "E5",      659.26   }, // 76
  { "F5",      698.46   }, // 77
  { "F#5/Gb5", 739.99   }, // 78
  { "G5",      783.99   }, // 79
  { "G#5/Ab5", 830.61   }, // 80
  { "A5",      880.00   }, // 81
  { "A#5/Bb5", 932.33   }, // 82
  { "B5",      987.77   }, // 83
  { "C6",      1046.50  }, // 84
  { "C#6/Db6", 1108.73  }, // 85
  { "D6",      1174.66  }, // 86
  { "D#6/Eb6", 1244.51  }, // 87
  { "E6",      1318.51  }, // 88
  { "F6",      1396.91  }, // 89
  { "F#6/Gb6", 1479.98  }, // 90
  { "G6",      1567.98  }, // 91
  { "G#6/Ab6", 1661.22  }, // 92
  { "A6",      1760.00  }, // 93
  { "A#6/Bb6", 1864.66  }, // 94
  { "B6",      1975.53  }, // 95
  { "C7",      2093.00  }, // 96
  { "C#7/Db7", 2217.46  }, // 97
  { "D7",      2349.32  }, // 98
  { "D#7/Eb7", 2489.02  }, // 99
  { "E7",      2637.02  }, // 100
  { "F7",      2793.83  }, // 101
  { "F#7/Gb7", 2959.96  }, // 102
  { "G7",      3135.96  }, // 103
  { "G#7/Ab7", 3322.44  }, // 104
  { "A7",      3520.00  }, // 105
  { "A#7/Bb7", 3729.31  }, // 106
  { "B7",      3951.07  }, // 107
  { "C8",      4186.01  }, // 108
  { "C#8/Db8", 4434.92  }, // 109
  { "D8",      4698.64  }, // 110
  { "D#8/Eb8", 4978.03  }, // 111
  { "E8",      5274.04  }, // 112
  { "F8",      5587.65  }, // 113
  { "F#8/Gb8", 5919.91  }, // 114
  { "G8",      6271.93  }, // 115
  { "G#8/Ab8", 6644.88  }, // 116
  { "A8",      7040.00  }, // 117
  { "A#8/Bb8", 7458.62  }, // 118
  { "B8",      7902.13  }, // 119
  { "C9",      8372.02  }, // 120
  { "C#9/Db9", 8869.84  }, // 121
  { "D9",      9397.27  }, // 122
  { "D#9/Eb9", 9956.06  }, // 123
  { "E9",      10548.08 }, // 124
  { "F9",      11175.30 }, // 125
  { "F#9/Gb9", 11839.82 }, // 126
  { "G9",      12543.85 }, // 127
  { "?",       0.0        }, // 128  (problem)
};

